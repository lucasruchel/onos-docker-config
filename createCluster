#!/bin/bash
export PATH="$PATH:bin:onos/bin"

# Remove kesys from knows_hosts
echo '' >  ~/.ssh/known_hosts

SSH_KEY=$(cut -d\  -f2 ~/.ssh/id_rsa.pub)
NUM_ONOS=$1

alias onos='ssh -p 8101 -o StrictHostKeyChecking=no'

# Create Atomix cluster using Atomix docker image
ATOMIX_IMAGE=atomix/atomix:3.1.5
for i in {1..3}; do
    echo "Setting up atomix-$i..."
    docker container run --detach --name atomix-$i --hostname atomix-$i \
        --restart=always -v /home/ti/onos-docker/config:/atomix $ATOMIX_IMAGE \
        --config /atomix/atomix-$i.conf
done


# Create ONOS cluster using ONOS docker image
ONOS_IMAGE=lucasruchel/onos-custom:latest
for i in $(seq 1 $NUM_ONOS); do
    echo "Setting up onos-$i..."
    docker container run --detach --name onos-$i --cpus="2" --hostname onos-$i --restart=always $ONOS_IMAGE
    docker exec -i onos-$i /bin/bash -c "mkdir config; cat > config/cluster.json" < $(dirname $0)/config/cluster-$i.json
    docker exec -it onos-$i bin/onos-user-key onos $SSH_KEY   2>&1
    docker exec -it onos-$i bin/onos-user-password onos rocks  2>&1
done

function waitForStart {
    sleep 5
    for i in $(seq 1 $NUM_ONOS); do
        echo "Waiting for onos-$i startup..."
        ip=$(docker container inspect onos-$i | grep \"IPAddress | cut -d: -f2 | sort -u | tr -d '", ')
        for t in {1..60}; do
            curl --fail -sS http://$ip:8181/onos/v1/applications --user onos:rocks >/dev/null 2>&1 && break;
            sleep 1;
        done
    done
}


waitForStart

#echo "Activating OpenFlow and ProxyARP applications..."
#ssh -p 8101 -o StrictHostKeyChecking=no onos@$OC1 app activate org.onosproject.openflow proxyarp fwd events

ssh -p 8101 -o StrictHostKeyChecking=no onos@172.17.0.5 app activate org.onosproject.openflow


sleep 10

#ssh -p 8101 -o StrictHostKeyChecking=no onos@$OC1 cfg set org.onosproject.fwd.ReactiveForwarding flowTimeout 5
#ssh -p 8101 -o StrictHostKeyChecking=no onos@$OC1 cfg set org.onosproject.fwd.ReactiveForwarding matchTcpUdpPorts true 

for i in $(seq 1 $NUM_ONOS); do

	ip=$(docker container inspect onos-$i | grep \"IPAddress | cut -d: -f2 | sort -u | tr -d '", ')

	echo "Habilitando TRACE para $ip"

	ssh -p 8101 -o StrictHostKeyChecking=no "onos@$ip" log:set TRACE


done

#ssh -p 8101 -o StrictHostKeyChecking=no onos@$OC1
